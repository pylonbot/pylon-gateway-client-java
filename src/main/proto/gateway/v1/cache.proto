syntax = "proto3";

package pylon.rpc.gateway.v1.cache;
option java_multiple_files = true;
option go_package = "up.lol/pylon/rpc/go/rpc/gateway/v1/cache";

import "discord/v1/model.proto";

// GetGuild

message GetGuildRequest {}

message GetGuildResponse { pylon.rpc.discord.v1.model.GuildData guild = 1; }

// ListGuildChannels

message ListGuildChannelsRequest {}

message ListGuildChannelsResponse {
  repeated pylon.rpc.discord.v1.model.ChannelData channels = 1;
}

// GetGuildChannel

message GetGuildChannelRequest { uint64 channel_id = 1 [jstype = JS_STRING]; }

message GetGuildChannelResponse {
  pylon.rpc.discord.v1.model.ChannelData channel = 1;
}

// ListGuildMembers

message ListGuildMembersRequest {
  uint64 after = 1 [jstype = JS_STRING];
  uint32 limit = 2;
}

message ListGuildMembersResponse {
  repeated pylon.rpc.discord.v1.model.MemberData members = 1;
}

// GetGuildMember

message GetGuildMemberRequest { uint64 user_id = 1 [jstype = JS_STRING]; }

message GetGuildMemberResponse {
  pylon.rpc.discord.v1.model.MemberData member = 1;
}

// ListGuildRoles

message ListGuildRolesRequest {}

message ListGuildRolesResponse {
  repeated pylon.rpc.discord.v1.model.RoleData roles = 1;
}

// GetGuildRole

message GetGuildRoleRequest { uint64 role_id = 1 [jstype = JS_STRING]; }

message GetGuildRoleResponse { pylon.rpc.discord.v1.model.RoleData role = 1; }

// ListGuildEmojis

message ListGuildEmojisRequest {}

message ListGuildEmojisResponse {
  repeated pylon.rpc.discord.v1.model.EmojiData Emojis = 1;
}

// GetGuildEmoji

message GetGuildEmojiRequest { uint64 emoji_id = 1 [jstype = JS_STRING]; }

message GetGuildEmojiResponse {
  pylon.rpc.discord.v1.model.EmojiData emoji = 1;
}

// GetUser

message GetUserRequest { uint64 user_id = 1 [jstype = JS_STRING]; }
message GetUserResponse { pylon.rpc.discord.v1.model.UserData user = 1; }

// ListTextChannelWebhooks

message ListTextChannelWebhooksRequest {
  uint64 channel_id = 1 [jstype = JS_STRING];
}

message ListTextChannelWebhooksResponse {
  repeated pylon.rpc.discord.v1.model.WebhookData Webhooks = 1;
}

// GetGuildMemberVoiceState

message GetGuildMemberVoiceStateRequest {
  uint64 user_id = 1 [jstype = JS_STRING];
}

message GetGuildMemberVoiceStateResponse {
  pylon.rpc.discord.v1.model.VoiceStateData voice_state_data = 1;
}

// ListGuildChannelVoiceStates

message ListGuildChannelVoiceStatesRequest {
  uint64 channel_id = 1 [jstype = JS_STRING];
}

message ListGuildChannelVoiceStatesResponse {
  repeated pylon.rpc.discord.v1.model.VoiceStateData voice_states_data = 1;
}

service GatewayCache {
  // Guilds
  rpc GetGuild(GetGuildRequest) returns(GetGuildResponse);

  // Channels
  rpc ListGuildChannels(ListGuildChannelsRequest)
      returns(ListGuildChannelsResponse);
  rpc GetGuildChannel(GetGuildChannelRequest) returns(GetGuildChannelResponse);

  // Guild Members
  rpc ListGuildMembers(ListGuildMembersRequest)
      returns(ListGuildMembersResponse);
  rpc GetGuildMember(GetGuildMemberRequest) returns(GetGuildMemberResponse);

  // Guild Member Properties
  rpc ListGuildRoles(ListGuildRolesRequest) returns(ListGuildRolesResponse);
  rpc GetGuildRole(GetGuildRoleRequest) returns(GetGuildRoleResponse);

  // Emojis
  rpc ListGuildEmojis(ListGuildEmojisRequest) returns(ListGuildEmojisResponse);
  rpc GetGuildEmoji(GetGuildEmojiRequest) returns(GetGuildEmojiResponse);

  // Users
  rpc GetUser(GetUserRequest) returns(GetUserResponse);

  // Webhooks
  rpc ListTextChannelWebhooks(ListTextChannelWebhooksRequest)
      returns(ListTextChannelWebhooksResponse);

  // VoiceStates
  rpc GetGuildMemberVoiceState(GetGuildMemberVoiceStateRequest)
      returns(GetGuildMemberVoiceStateResponse);
  rpc ListGuildChannelVoiceStates(ListGuildChannelVoiceStatesRequest)
      returns(ListGuildChannelVoiceStatesResponse);
}
